shiny::runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
shiny::runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
runApp('gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication')
long_data %>%
mutate(confirmed = if_else(TRUE, log(confirmed), confirmed))
long_data %>% confirmed %>% unique()
long_data %>% pull(confirmed) %>% unique()
library(shiny)
source('visualization.r')
setwd("gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/")
library(shiny)
source('visualization.r')
long_data %>% pull(confirmed) %>% plot()
long_data %>% pull(confirmed) %>% unique()
confirmed
confirmed
long_data <- confirmed %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="confirmed") %>%
left_join(
deaths %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="deaths")) %>%
left_join(
recovered %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="recovered")) %>%
mutate(date = as.Date(date, format="X%m.%d.%y"))
long_data %>% pull(confirmed) %>% unique()
runApp()
runApp()
TRUE * 10
runApp()
long_data %>% filter(Country.Region == "US")
long_data %>% filter(Country.Region == "US") %>% View()
long_data <- confirmed %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="confirmed") %>%
left_join(
deaths %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="deaths")) %>%
left_join(
recovered %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="recovered")) %>%
mutate(date = as.Date(date, format="X%m.%d.%y")) %>%
group_by(Country.Region) %>%
summarise_at(list(confirmed, deaths, recovered), list(sum))
long_data <- confirmed %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="confirmed") %>%
left_join(
deaths %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="deaths")) %>%
left_join(
recovered %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="recovered")) %>%
mutate(date = as.Date(date, format="X%m.%d.%y")) %>%
group_by(Country.Region) %>%
summarise_at(c(confirmed, deaths, recovered), list(sum))
long_data <- confirmed %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="confirmed") %>%
left_join(
deaths %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="deaths")) %>%
left_join(
recovered %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="recovered")) %>%
mutate(date = as.Date(date, format="X%m.%d.%y")) %>%
group_by(Country.Region) %>%
summarise_at(c("confirmed", "deaths", "recovered"), list(sum))
runApp()
runApp()
runApp()
mutate_at
?mutate_at
runApp()
?mutate_at
runApp()
rep(c('a', 'b'), 2)
rep(2, c('a', 'b'))
?rep
rep(c('a', 'b'), each = 2,  2)
rep(c('a', 'b'), each = 2)
runApp()
seq(length(3))
seq(length(c(1, 2, 3)))
seq(length(c('x', 'y', 'z')))
runApp()
wich(c('x', 'y', 'z') == 'y')
which(c('x', 'y', 'z') == 'y')
runApp()
population <- read.csv("population.csv")
population
population <- read.csv("population.csv", header = FALSE, col.names = c("Country.Region", "population"))
long_data <- confirmed %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="confirmed") %>%
left_join(
deaths %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="deaths")) %>%
left_join(
recovered %>%
pivot_longer(
c(-`Province.State`, -`Country.Region`, -Long, -Lat),
names_to="date",
values_to="recovered")) %>%
mutate(date = as.Date(date, format="X%m.%d.%y")) %>%
group_by(Country.Region, date) %>%
summarise_at(c("confirmed", "deaths", "recovered"), list(sum)) %>%
ungroup() %>%
left_join(population)
divide_by()
runApp()
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
runApp()
long_data$population
runApp()
long_data %>%
filter(Country.Region %in% input$countries) %>%
filter(case %in% input$cases) %>%
mutate(value = if_else(rep(TRUE, nrow(.)), value / population, value)) %>%
mutate(value = if_else(rep(FALSE, nrow(.)), log(value), value))
long_data %>%
filter(Country.Region == "Germany") %>%
filter(case == "confirmed") %>%
mutate(value = if_else(rep(TRUE, nrow(.)), value / population, value)) %>%
mutate(value = if_else(rep(FALSE, nrow(.)), log(value), value))
long_data %>%
filter(Country.Region == "Germany") %>%
filter(case == "confirmed") %>%
mutate(value = if_else(rep(TRUE, nrow(.)), value / population, value))# %>%
#mutate(value = if_else(rep(FALSE, nrow(.)), log(value), value))
long_data %>%
filter(Country.Region == "Germany") %>%
filter(case == "confirmed")# %>%
#mutate(value = if_else(rep(TRUE, nrow(.)), value / population, value))# %>%
#mutate(value = if_else(rep(FALSE, nrow(.)), log(value), value))
long_data %>%
filter(Country.Region == "Germany") %>%
filter(case == "confirmed") %>%
mutate(value = ifelse(rep(TRUE, nrow(.)), value / population, value)) %>%
#mutate(value = if_else(rep(FALSE, nrow(.)), log(value), value))
runApp()
runApp()
runApp()
runApp()
?scale_y_log10
runApp()
long_data %>% select(Country.Region, population) %>% distinct()
?read.csv
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
runApp()
long_data %>% filter(Country.Region == "Germany") %>% group_by(case) %>% arrange(desc(value)) %>% slice(1)
source('~/gitrepos/COVID-19/csse_covid_19_data/csse_covid_19_time_series/covid19_visualication/visualization.r')
long_data %>% filter(Country.Region == "Germany") %>% group_by(case) %>% arrange(desc(value)) %>% slice(1)
runApp()
